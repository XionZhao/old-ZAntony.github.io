<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Antony Blog</title>
    <description>渴望伯克利，梦想free的小青年</description>
    <link>https://zantony.github.io/</link>
    <atom:link href="https://zantony.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 22 Jan 2017 14:46:37 +0800</pubDate>
    <lastBuildDate>Sun, 22 Jan 2017 14:46:37 +0800</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>Linux系统异常-CoreDump详解</title>
        <description>&lt;h3 id=&quot;coredump&quot;&gt;CoreDump&lt;/h3&gt;

&lt;p&gt;http://linux.die.net/man/5/core&lt;/p&gt;

&lt;h4 id=&quot;什么是core-dump&quot;&gt;什么是core dump&lt;/h4&gt;

&lt;p&gt;core dump又叫核心转储, 当程序运行过程中发生异常, 程序异常退出时, 由操作系 统把程序当前的内存状况存储在一个core文件中, 叫core dump。core dump在应用 crash掉之后对问题的诊断是很有帮助的。而在默认安装的时候core dump是关闭状 态的。&lt;/p&gt;

&lt;h4 id=&quot;如何查看系统是否打开了core-dump&quot;&gt;如何查看系统是否打开了core dump&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note：使用ulimit -c查看core dump是否打开。如果结果为0，则表示此功能处于关闭 状态，不会生成core文件&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ ulimit -c

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;如何打开core-dump&quot;&gt;如何打开core dump&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;方法一&lt;/strong&gt;:命令行方式&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ ulimit -c 1024  # 避免一下生成几G的大文件

$ ulimit -c unlimited  #无限制

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;方法二&lt;/strong&gt;:配置profile文件:  将&lt;code class=&quot;highlighter-rouge&quot;&gt;ulimit -S -c 0 &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/code&gt;改成&lt;code class=&quot;highlighter-rouge&quot;&gt;ulimit -S -c unlimited &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ vim /etc/profile

ulimit -S -c unlimited &amp;gt; /dev/null 2&amp;gt;&amp;amp;1

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;方法三&lt;/strong&gt;:修改/etc/security/limits.conf文件：添加&lt;code class=&quot;highlighter-rouge&quot;&gt;* soft core 0&lt;/code&gt;，这个方法可以 针对指定用户或用户组打开core dump，&lt;code class=&quot;highlighter-rouge&quot;&gt;user soft core 0或@group soft core 0&lt;/code&gt;。不 过要使用这个方法一定要将方法二提到的那行注释掉，不可同时存在&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ vim /etc/security/limits.conf

* soft core 0

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;如何查看core文件的保存路径和文件名格式&quot;&gt;如何查看core文件的保存路径和文件名格式&lt;/h4&gt;

&lt;p&gt;默认情况下，在打开core后，如果应用发生crash，那么会在应用所在位置，产生 一个core.【应用pid】的文件，文件名的可读性不高，管理也不方便。&lt;/p&gt;

&lt;h4 id=&quot;查看正在使用的core文件路径和格式&quot;&gt;查看正在使用的core文件路径和格式&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;more /proc/sys/kernel/core_pattern&lt;/code&gt; 后面自动添加pid的配置是在&lt;code class=&quot;highlighter-rouge&quot;&gt;more /proc/sys/kernel/core_uses_pid&lt;/code&gt;里面配置的， 如果为1就是自动添加&lt;/p&gt;

&lt;h4 id=&quot;如何修改core文件的保存路径和文件名格式&quot;&gt;如何修改core文件的保存路径和文件名格式&lt;/h4&gt;

&lt;p&gt;修改/etc/sysctl.conf文件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ vi /etc/sysctl.conf

$ kernel.core_pattern = /tmp/corefile/core.%e.%t

$ sysctl -p

#添加需要保存的路径,需要注意的是该路径必须应用 有写的权限，不然core文件是不会生成的。关 于core_users_pid默认在sysctl文件里面已经存在，不需要更改，pid还是很重要的信息。

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;附上core文件支持的格式列表&quot;&gt;附上core文件支持的格式列表:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;%p – insert pid into filename 【pid】&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;%u – insert current uid into filename 【uid】&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;%g – insert current gid into filename 【gid】&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;%s – insert signal that caused the coredump into the filename 【core信号】&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;%t – insert UNIX time that the coredump occurred into filename 【core文件生成时的 unix时间】&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;%h – insert hostname where the coredump happened into filename 【主机名】&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;%e – insert coredumping executable name into filename 【应用的名字】&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;如何使用测试程序生成的core&quot;&gt;如何使用测试程序生成的core&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
[c-sharp] view plaincopy

#include &amp;lt;iostream&amp;gt;using namespace std;int main() { *(char *)1=1; return 0;}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;online-core-设置&quot;&gt;Online core 设置:&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ vim /etc/sysctl.conf

kernel.core_uses_pid = 1

kernel.core_pattern = core.%e.%p.%t

$ sysctl -p

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 19 Jan 2017 00:00:00 +0800</pubDate>
        <link>https://zantony.github.io/2017/01/19/CoreDump/</link>
        <guid isPermaLink="true">https://zantony.github.io/2017/01/19/CoreDump/</guid>
        
        <category>coredump</category>
        
        <category>linux system</category>
        
        
      </item>
    
      <item>
        <title>IPSEC-L2TP-VPN-on-Ubuntu-14.04-with-OpenSwan-xl2tpd-and-ppp</title>
        <description>&lt;h3 id=&quot;vpn原理&quot;&gt;VPN原理&lt;/h3&gt;

&lt;p&gt;http://www.cisco.com/support/zh/105/IPSECpart1.shtml#glossary&lt;/p&gt;

&lt;p&gt;http://www.china-ccie.com/doc/vpn/vpn.html&lt;/p&gt;

&lt;h3 id=&quot;install-ppp-openswan-and-xl2tpd&quot;&gt;Install ppp openswan and xl2tpd&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ sudo apt-get install openswan xl2tpd ppp lsof

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;firewall-and-sysctl&quot;&gt;Firewall and sysctl&lt;/h3&gt;

&lt;h4 id=&quot;配置一条防火墙语句&quot;&gt;配置一条防火墙语句&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
iptables -t nat -A POSTROUTING -s %SERVERIP% -o eth0 -j MASQUERADE

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;启用内核转发和禁用icp-redirects&quot;&gt;启用内核转发和禁用ICP redirects&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
echo &quot;net.ipv4.ip_forward = 1&quot; |  tee -a /etc/sysctl.conf

echo &quot;net.ipv4.conf.all.accept_redirects = 0&quot; |  tee -a /etc/sysctl.conf

echo &quot;net.ipv4.conf.all.send_redirects = 0&quot; |  tee -a /etc/sysctl.conf

echo &quot;net.ipv4.conf.default.rp_filter = 0&quot; |  tee -a /etc/sysctl.conf

echo &quot;net.ipv4.conf.default.accept_source_route = 0&quot; |  tee -a /etc/sysctl.conf

echo &quot;net.ipv4.conf.default.send_redirects = 0&quot; |  tee -a /etc/sysctl.conf

echo &quot;net.ipv4.icmp_ignore_bogus_error_responses = 1&quot; |  tee -a /etc/sysctl.conf

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;设置如下参数到其他网络接口&quot;&gt;设置如下参数到其他网络接口&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ for vpn in /proc/sys/net/ipv4/conf/*; do echo 0 &amp;gt; $vpn/accept_redirects; echo 0 &amp;gt; $vpn/send_redirects; done
$ sysctl -p

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;设置重启后执行etcrclocal&quot;&gt;设置重启后执行&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/rc.local&lt;/code&gt;&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ sudo vim /etc/rc.local

for vpn in /proc/sys/net/ipv4/conf/*; do echo 0 &amp;gt; $vpn/accept_redirects; echo 0 &amp;gt; $vpn/send_redirects; done



iptables -t nat -A POSTROUTING -s %SERVERIP% -o eth0 -j MASQUERADE

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;配置-openswanipsec&quot;&gt;配置 Openswan(IPSEC)&lt;/h3&gt;

&lt;p&gt;使用你的编辑器打开ipsec的配置文件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
/etc/ipsec.conf

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;配置如下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
config setup

      nat_traversal=yes

      virtual_private=%v4:10.0.0.0/8,%v4:192.168.0.0/16,%v4:172.16.0.0/12,%v4:!10.152.2.0/24

      # 这里包含的网络地址允许配置为远程客户端所在的子网。换句话说，

      # 这些地址范围应该是你的NAT路由器后面的客户端的地址。

      oe=off

      protostack=netkey



conn L2TP-PSK-NAT

      rightsubnet=vhost:%priv

      also=L2TP-PSK-noNAT



conn L2TP-PSK-noNAT

      authby=secret

      pfs=no

      auto=add

      keyingtries=3

      rekey=no

      # Apple 的 iOS 不会发送 delete 提醒，

      # 所以我们需要通过死亡对端（dead peer）检测来识别断掉的客户端

      dpddelay=30

      dpdtimeout=120

      dpdaction=clear

      # 设置 ikelifetime 和 keylife 和 Windows 的默认设置一致

      ikelifetime=8h

      keylife=1h

      type=transport

      # 替换 IP 地址为你的本地IP （一般是，私有地址、NAT内的地址）

      left=10.100.1.217

      # 用于升级过的 Windows 2000/XP 客户端

      leftprotoport=17/1701

      # 要支持老的客户端，需要设置 leftprotoport=17/%any

      right=%any

      rightprotoport=17/%any

      # 强制所有连接都NAT，因为 iOS

      forceencaps=yes

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;通过如下命令可以获取你本地的网络ip(当然，是外网ip，如果你想使用内网ip，请忽略)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
curl ifconfig.me

# 或者

curl http://ip.mtak.nl

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;配置共享密钥&quot;&gt;配置共享密钥&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/ipsec.secrets&lt;/code&gt; file,确保其长度够&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
%SERVER_IP%  %any  : PSK &quot;BC2BCKALFJKAJFKAMCJKFKSJKNCMZJKAK443&quot;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果你想生成一个random key，使用openssl命令&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ sudo openssl rand -hex 30

39651bbc2c459109410b3b28e3507d27799feb5e8e0dc25532d29274abb7

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;校验ipsec设置&quot;&gt;校验ipsec设置&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
ipsec verify

Verifying installed system and configuration files



Version check and ipsec on-path                   	[OK]

Libreswan 3.18 (netkey) on 3.13.0-101-generic

Checking for IPsec support in kernel              	[OK]

 NETKEY: Testing XFRM related proc values

         ICMP default/send_redirects              	[OK]

         ICMP default/accept_redirects            	[OK]

         XFRM larval drop                         	[OK]

Pluto ipsec.conf syntax                           	[OK]

Hardware random device                            	[N/A]

Two or more interfaces found, checking IP forwarding	[OK]

Checking rp_filter                                	[OK]

Checking that pluto is running                    	[OK]

 Pluto listening for IKE on udp 500               	[OK]

 Pluto listening for IKE/NAT-T on udp 4500        	[OK]

 Pluto ipsec.secret syntax                        	[OK]

Checking &#39;ip&#39; command                             	[OK]

Checking &#39;iptables&#39; command                       	[OK]

Checking &#39;prelink&#39; command does not interfere with FIPSChecking for obsolete ipsec.conf options          	[OK]

Opportunistic Encryption                          	[DISABLED]

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;配置-xl2tpd&quot;&gt;配置 xl2tpd&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/xl2tpd/xl2tpd.conf&lt;/code&gt; 配置文件&lt;/p&gt;

&lt;h4 id=&quot;修改其配置&quot;&gt;修改其配置&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
[global]

ipsec saref = no



[lns default]

ip range = 10.0.1.230-10.0.1.240

local ip = 10.0.1.217

require chap = yes

refuse pap = yes

require authentication = yes

ppp debug = yes

pppoptfile = /etc/ppp/options.xl2tpd

length bit = yes

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ip range = 主要提供给连接的客户端使用&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;local ip = vpn server ip&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;refuse pap = refuse pap认证&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ppp debug = yes 测试的时候使用，不要再生产使用&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其他认证方式：https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_with_Ubuntu_14.04.html&lt;/p&gt;

&lt;h3 id=&quot;配置ppp&quot;&gt;配置ppp&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ vim /etc/ppp/options.xl2tpd

refuse-mschap-v2

refuse-mschap

ms-dns 114.114.114.114

ms-dns 202.106.0.20

asyncmap 0

auth

crtscts

idle 1800

mtu 1200

mru 1200

lock

hide-password

local

#debug

name l2tpd

proxyarp

lcp-echo-interval 30

lcp-echo-failure 4

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ms-dns: 提供给客户端的dns地址&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;proxyarp：添加一个加密给系统ARP表(Add an entry to this systems ARP [Address Resolution Protocol] table with the IP address of the peer and the Ethernet address of this system. This will have the effect of making the peer appear to other systems to be on the local ethernet.)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;name l2tpd: 用于ppp认证文件给l2tpd&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;添加一个用户&quot;&gt;添加一个用户&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ sudo vim /etc/ppp/chap-secrets

&quot;test&quot; l2tpd &quot;test@123..$$_@&quot; *

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;重启服务并测试&quot;&gt;重启服务并测试&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;

/etc/init.d/ipsec restart 

/etc/init.d/xl2tpd restart

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;日志存储路径&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
/var/log/syslog

/var/log/auth.log

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;其他平台配置&quot;&gt;其他平台配置&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://raymii.org/s/tutorials/IPSEC_vpn_with_CentOS_7.html&quot;&gt;CentOS 7, Scientific Linux 7 or Red Hat Enterprise Linux 7 (IKEv2,no L2TP)&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_on_CentOS_-_Red_Hat_Enterprise_Linux_or_Scientific_-_Linux_6.html&quot;&gt;CentOS 6, Scientific Linux 6 or Red Hat Enterprise Linux 6&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_on_a_Raspberry_Pi_with_Arch_Linux.html&quot;&gt;Raspberry Pi with Arch Linux ARM&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://raymii.org/s/tutorials/IPSEC_vpn_with_Ubuntu_16.04.html&quot;&gt;Ubuntu 16.04, (IKEv2,no L2TP)&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://raymii.org/s/tutorials/IPSEC_vpn_with_Ubuntu_15.10.html&quot;&gt;Ubuntu 15.10, (IKEv2,no L2TP)&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://raymii.org/s/tutorials/IPSEC_vpn_with_Ubuntu_15.04.html&quot;&gt;Ubuntu 15.04, (IKEv2,no L2TP)&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_with_Ubuntu_13.10.html&quot;&gt;Ubuntu 13.10&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_with_Ubuntu_13.04.html&quot;&gt;Ubuntu 13.04&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_with_Ubuntu_12.10.html&quot;&gt;Ubuntu 12.10&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_with_Ubuntu_12.04.html&quot;&gt;Ubuntu 12.04 LTS&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;作者：&lt;code class=&quot;highlighter-rouge&quot;&gt;Antony&lt;/code&gt; WX&amp;amp;QQ：&lt;code class=&quot;highlighter-rouge&quot;&gt;1257465991&lt;/code&gt;
Q/A：如有问题请慷慨提出&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 13 Jan 2017 00:00:00 +0800</pubDate>
        <link>https://zantony.github.io/2017/01/13/IPSEC-L2TP-VPN-on-Ubuntu-14.04-with-OpenSwan-xl2tpd-and-ppp/</link>
        <guid isPermaLink="true">https://zantony.github.io/2017/01/13/IPSEC-L2TP-VPN-on-Ubuntu-14.04-with-OpenSwan-xl2tpd-and-ppp/</guid>
        
        <category>vpn</category>
        
        <category>l2tp/ipsec</category>
        
        <category>l2tp</category>
        
        <category>ipsec</category>
        
        
      </item>
    
      <item>
        <title>aws自定义AMI-UUID相同处理方法</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Note: 在制作Centos 7 AMI并进行使用时，我们发现：如果将两个相同AMI挂载到一个操作系统的时候，会出现因为UUID相同，导致不能挂载的问题(至于为什么将两个相同的AMI挂载到一个操作系统：当误删除用户的密钥文件或者不能登录系统时，我们不得不将其挂载到其他操作系统)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;问题重现&quot;&gt;问题重现&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ sudo fdisk -l

Disk /dev/xvda: 53.7 GB, 53687091200 bytes, 104857600 sectors

Units = sectors of 1 * 512 = 512 bytes

Sector size (logical/physical): 512 bytes / 512 bytes

I/O size (minimum/optimal): 512 bytes / 512 bytes

Disk label type: dos

Disk identifier: 0x0001783d



    Device Boot      Start         End      Blocks   Id  System

/dev/xvda1   *        2048   104856254    52427103+  83  Linux



Disk /dev/mapper/docker-202:1-84149041-pool: 107.4 GB, 107374182400 bytes, 209715200 sectors

Units = sectors of 1 * 512 = 512 bytes

Sector size (logical/physical): 512 bytes / 512 bytes

I/O size (minimum/optimal): 65536 bytes / 65536 bytes





Disk /dev/xvdf: 53.7 GB, 53687091200 bytes, 104857600 sectors

Units = sectors of 1 * 512 = 512 bytes

Sector size (logical/physical): 512 bytes / 512 bytes

I/O size (minimum/optimal): 512 bytes / 512 bytes

Disk label type: dos

Disk identifier: 0x0001783d



    Device Boot      Start         End      Blocks   Id  System

/dev/xvdf1   *        2048   104856254    52427103+  83  Linux



# 挂载新硬盘

$ sudo mount /dev/xvdf1 /mnt/

# 此时出现问题，通过dmesg查看到是因为uuid已经存在。

mount: wrong fs type, bad option, bad superblock on /dev/xvdf1,

       missing codepage or helper program, or other error



       In some cases useful info is found in syslog - try

       dmesg | tail or so.

[meiqia-sa@jenkins-app0 ~]$ dmesg |tail

[21609.549695]  xvdf: xvdf1

[21737.056975] XFS (xvdf1): Filesystem has duplicate UUID test-uuid-c888-4f55-9d74-e3495a50ba03 - can&#39;t mount

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;解决方法&quot;&gt;解决方法&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ sudo mount -o nouuid /dev/xvdf1 /mnt/

$ df -hT

Filesystem     Type      Size  Used Avail Use% Mounted on

/dev/xvda1     xfs        50G  8.2G   42G  17% /

/dev/xvdf1     xfs        50G  5.9G   45G  12% /mnt

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;作者：&lt;code class=&quot;highlighter-rouge&quot;&gt;Antony&lt;/code&gt; WX&amp;amp;QQ：&lt;code class=&quot;highlighter-rouge&quot;&gt;1257465991&lt;/code&gt;
Q/A：如有问题请慷慨提出&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Thu, 12 Jan 2017 00:00:00 +0800</pubDate>
        <link>https://zantony.github.io/2017/01/12/aws%E8%87%AA%E5%AE%9A%E4%B9%89AMI-UUID%E7%9B%B8%E5%90%8C%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</link>
        <guid isPermaLink="true">https://zantony.github.io/2017/01/12/aws%E8%87%AA%E5%AE%9A%E4%B9%89AMI-UUID%E7%9B%B8%E5%90%8C%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</guid>
        
        <category>aws</category>
        
        
      </item>
    
      <item>
        <title>aws-ec2-双网卡问题</title>
        <description>&lt;h4 id=&quot;问题描述&quot;&gt;问题描述&lt;/h4&gt;

&lt;p&gt;在已存在的EC2上新添加网卡后发现，凡是和eth0在同一个网段的只能通过eth0访问，不能通过eth1。同样的，在eth1网段的只能通过eth1访问，不能通过eth0访问。 如果既不在eth0也不再eth0 默认走eth0(在没有修改路由表的前提下，默认路由是eth0)&lt;/p&gt;

&lt;h4 id=&quot;问题分析&quot;&gt;问题分析&lt;/h4&gt;

&lt;p&gt;之所以出现您列出的网络访问现象，是因为目前的实例当中有两块网卡，而发生故障的时候，路由的走向是从网卡2进来的数据包从网卡1发送出去，或者从网卡1进来的数据包从网卡2发送出去，AWS底层会把这样的数据包丢弃。&lt;/p&gt;

&lt;p&gt;因此需要手动定义策略路由，在响应网卡1进来的数据包时通过网卡1发送，响应网卡2进来的数据包时通过网卡2发送。&lt;/p&gt;

&lt;h4 id=&quot;解决方案&quot;&gt;解决方案&lt;/h4&gt;

&lt;p&gt;关于这个现象和解决方案，可以参考这遍文档：&lt;/p&gt;

&lt;p&gt;http://www.linuxjournal.com/article/7291&lt;/p&gt;

&lt;p&gt;该文档较长，这里介绍一个配置路由策略的事例，可以按照此事例的方法结合具体网络环境进行配置：&lt;/p&gt;

&lt;h5 id=&quot;1首先为网卡1和2创建各自的路由表&quot;&gt;1、首先为网卡1和2创建各自的路由表：&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
ip route add [子网1网段] via [您子网的网关IP] dev eth0 tab 1

ip route add [子网2网段] via [您子网的网关IP] dev eth1 tab 2

可以通过ip route show table 1和ip route show table 2查看您刚刚完成的配置是否正确

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;2然后创建策略路由&quot;&gt;2、然后创建策略路由&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
ip rule add from [eth0的IP]/32 tab 1 priority 500

ip rule add from [eth1的IP]/32 tab 2 priority 600

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这个配置的意思是，将原地址为eth0的IP的包按照路由表1发送,将原地址为eth1的IP的包按照路由表2发送&lt;/p&gt;

&lt;h5 id=&quot;3查看并刷新&quot;&gt;3、查看并刷新&lt;/h5&gt;

&lt;p&gt;可以通过 ip rule命令查看已经配置的路由策略。一个示例的策略如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$  ip rule

0:	from all lookup local

500:	from 172.31.30.238 lookup 1

600:	from 172.31.22.112 lookup 2

32766:	from all lookup main

32767:	from all lookup default

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;最后刷新路由策略的cache，之后您可以继续测试。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
ip route flush cache

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果希望实例重启后ip route 和 ip rule所配置的规则还在，需要按照以下方式进行配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
echo “[子网1网段] via [您子网的网关IP] dev eth0 table 1″ &amp;gt; /etc/sysconfig/network-scripts/route-eth0

echo “[子网2网段] via [您子网的网关IP] dev eth1 table 2″ &amp;gt; /etc/sysconfig/network-scripts/route-eth1



echo “from [eth0的IP]/32 table 1″ &amp;gt; /etc/sysconfig/network-scripts/rule-eth0

echo “from [eth1的IP]/32 table 2″ &amp;gt; /etc/sysconfig/network-scripts/rule-eth1

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;最后重启network service&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
service network restart

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;需要注意的是，如果在重启服务的时候不成功，可以尝试关闭Network Manager。这个服务和默认的网络服务启动脚本经常有冲突，导致配置无法应用。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
chkconfig NetworkManger off

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;作者：&lt;code class=&quot;highlighter-rouge&quot;&gt;Antony&lt;/code&gt; WX&amp;amp;QQ：&lt;code class=&quot;highlighter-rouge&quot;&gt;1257465991&lt;/code&gt;
Q/A：如有问题请慷慨提出&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Thu, 12 Jan 2017 00:00:00 +0800</pubDate>
        <link>https://zantony.github.io/2017/01/12/aws-ec2-%E5%8F%8C%E7%BD%91%E5%8D%A1%E9%97%AE%E9%A2%98/</link>
        <guid isPermaLink="true">https://zantony.github.io/2017/01/12/aws-ec2-%E5%8F%8C%E7%BD%91%E5%8D%A1%E9%97%AE%E9%A2%98/</guid>
        
        <category>aws</category>
        
        
      </item>
    
      <item>
        <title>Ss-Client-Config</title>
        <description>&lt;h3 id=&quot;mac-local-configure&quot;&gt;Mac local configure&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ sudo pip install shadowsocks

$ sudo vim /etc/shadowsock-cient.json

{

    &quot;server&quot;:&quot;SERVER_IP&quot;,

    &quot;server_port&quot;:PORT,

    &quot;password&quot;:&quot;PASSWORD&quot;,

    &quot;timeout&quot;:600,

    &quot;method&quot;:&quot;aes-256-cfb&quot;,

    &quot;fast_open&quot;: false

}

$ sudo sslocal -c /etc/shadowsock-client.json -d start 

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;windows-local-configure&quot;&gt;Windows local configure&lt;/h3&gt;

&lt;p&gt;待补充。。。。&lt;/p&gt;

&lt;h3 id=&quot;switchyomega-配置&quot;&gt;SwitchyOmega 配置&lt;/h3&gt;

&lt;h3 id=&quot;1下载chrom浏览器插件&quot;&gt;1、下载chrom浏览器插件&lt;/h3&gt;

&lt;p&gt;https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?hl=zh-CN&lt;/p&gt;

&lt;h3 id=&quot;2导入我的备份文件&quot;&gt;2、导入我的备份文件&lt;/h3&gt;

&lt;p&gt;先下载我的备份：http://zantony.top:8088/antony.bak&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ss/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3配置情景&quot;&gt;3、配置情景&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/ss/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4设置为自动切换&quot;&gt;4、设置为自动切换&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/img/ss/3.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/img/ss/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;5畅游自由网络的海洋&quot;&gt;5、畅游自由网络的海洋&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/ss/5.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/img/ss/6.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/img/ss/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 10 Jan 2017 00:00:00 +0800</pubDate>
        <link>https://zantony.github.io/2017/01/10/Ss-Client-Config/</link>
        <guid isPermaLink="true">https://zantony.github.io/2017/01/10/Ss-Client-Config/</guid>
        
        <category>FastDFS</category>
        
        <category>分布式存储</category>
        
        
      </item>
    
      <item>
        <title>制作并安装FastDFS的RPM程序包</title>
        <description>&lt;h3 id=&quot;一安装并制作rpm包libfastcommon&quot;&gt;一、安装并制作rpm包libfastcommon&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;注意&lt;/code&gt;:生成的rpm包全都在&lt;code class=&quot;highlighter-rouge&quot;&gt;/root/rpmbuild/RPMS/&lt;/code&gt;下面，可以再其他主机直接使用&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Author: Antony&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# rpm build for fastdfs&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Mail: zhaoxin@altamob.com,go80800@163.com&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Desc: build libfastcommmon # 制作和安装libfastcommon&lt;/span&gt;

cat &lt;span class=&quot;sh&quot;&gt;&amp;lt;&amp;lt; EOF
+-------------------------------------------+
|   this is a rpmbuild libfastcommon script |
|          from Antony .......              |
+--------------------------------------------
EOF
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 制作源码文件 建议手动安装yum&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#yum groupinstall &quot;Development Tools&quot; &quot;Server platform Development&quot; -y &lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /root/

git clone https://github.com/happyfish100/libfastcommon.git 

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt; -ne 0 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;;&lt;span class=&quot;k&quot;&gt;then
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;libversion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;grep -i &lt;span class=&quot;s2&quot;&gt;&quot;^version&quot;&lt;/span&gt; libfastcommon/libfastcommon.spec |awk -F&lt;span class=&quot;s1&quot;&gt;&#39;:&#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;{print $2}&#39;&lt;/span&gt;|awk &lt;span class=&quot;s1&quot;&gt;&#39;{print $1}&#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

mv libfastcommon/ libfastcommon-&lt;span class=&quot;nv&quot;&gt;$libversion&lt;/span&gt;

tar zcf libfastcommon-&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;libversion&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.tar.gz libfastcommon-&lt;span class=&quot;nv&quot;&gt;$libversion&lt;/span&gt; 
&lt;span class=&quot;c&quot;&gt;# 制作rpm包&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /root
mkdir rpmbuild/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;SOURCES,SPECS&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; -pv
cp libfastcommon-&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;libversion&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.tar.gz rpmbuild/SOURCES/
cp libfastcommon-&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;libversion&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/libfastcommon.spec rpmbuild/SPECS/

rpmbuild -ba /root/rpmbuild/SPECS/libfastcommon.spec &amp;amp;&amp;gt;/dev/null

yum install /root/rpmbuild/RPMS/x86_64/libfastcommon-1.0.29-1.el7.centos.x86_64.rpm /root/rpmbuild/RPMS/x86_64/libfastcommon-devel-1.0.29-1.el7.centos.x86_64.rpm -y &amp;amp;&amp;gt;/dev/null

sleep 2
&lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;rpm -q libfastcommon &amp;amp;&amp;gt;/dev/null;then

cat &lt;span class=&quot;sh&quot;&gt;&amp;lt;&amp;lt; EOF
+---------------------------------------+
|                                       |
|        libfastcommon  OK              |
|                                       |
+---------------------------------------
EOF

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else 
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;install filed!&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;二制作并安装fastdfs&quot;&gt;二、制作并安装FastDFS&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;注意&lt;/code&gt;:生成的rpm包全都在&lt;code class=&quot;highlighter-rouge&quot;&gt;/root/rpmbuild/RPMS/&lt;/code&gt;下面，可以再其他主机直接使用
第二步骤，如果报错，请再执行一遍。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Author: Antony&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# rpm build for fastdfs&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Mail: zhaoxin@altamob.com,go80800@163.com&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Desc: build fastdfs # 作fastdfs rpm&lt;/span&gt;
cat &lt;span class=&quot;sh&quot;&gt;&amp;lt;&amp;lt; EOF
+-------------------------------------------+
|   this is a rpmbuild FastDFS   script     |
|          from Antony .......              |
+--------------------------------------------
EOF
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;rpm -q libfastcommon;then
	
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /root/

git clone https://github.com/happyfish100/fastdfs.git

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt; -ne 0 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;;&lt;span class=&quot;k&quot;&gt;then
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;sleep 3

&lt;span class=&quot;nv&quot;&gt;fdfsv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;grep -E &lt;span class=&quot;s2&quot;&gt;&quot;FDFSVersion[[:space:]]+&quot;&lt;/span&gt; fastdfs/fastdfs.spec|awk &lt;span class=&quot;s1&quot;&gt;&#39;{print $3}&#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

mv fastdfs fastdfs-&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;fdfsv&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /root/

tar zcf fastdfs-&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;fdfsv&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.tar.gz fastdfs-&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;fdfsv&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/

mkdir rpmbuild/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;SOURCES,SPECS&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; -pv
cp fastdfs-&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;fdfsv&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.tar.gz rpmbuild/SOURCES/
cp fastdfs-&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;fdfsv&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/fastdfs.spec rpmbuild/SPECS/
rpmbuild -ba /root/rpmbuild/SPECS/fastdfs.spec 

yum install /root/rpmbuild/RPMS/x86_64/fastdfs-5.0.8-1.el7.centos.x86_64.rpm /root/rpmbuild/RPMS/x86_64/fastdfs-server-5.0.8-1.el7.centos.x86_64.rpm /root/rpmbuild/RPMS/x86_64/fastdfs-tool-5.0.8-1.el7.centos.x86_64.rpm /root/rpmbuild/RPMS/x86_64/libfdfsclient-5.0.8-1.el7.centos.x86_64.rpm /root/rpmbuild/RPMS/x86_64/libfdfsclient-devel-5.0.8-1.el7.centos.x86_64.rpm -y &amp;amp;&amp;gt;/dev/null

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt; -eq 0 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;;&lt;span class=&quot;k&quot;&gt;then
&lt;/span&gt;cat &lt;span class=&quot;sh&quot;&gt;&amp;lt;&amp;lt; EOF
+---------------------------------------+
|                                       |
|        Everything  OK                 |
|                                       |
+----------------------------------------
EOF
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fi

else
        &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;libcommon is not install&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;作者：Antony WX&amp;amp;QQ：1257465991
Q/A：如有问题请慷慨提出&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sat, 07 Jan 2017 00:00:00 +0800</pubDate>
        <link>https://zantony.github.io/2017/01/07/%E5%88%B6%E4%BD%9C%E5%B9%B6%E5%AE%89%E8%A3%85FastDFS%E7%9A%84RPM%E7%A8%8B%E5%BA%8F%E5%8C%85/</link>
        <guid isPermaLink="true">https://zantony.github.io/2017/01/07/%E5%88%B6%E4%BD%9C%E5%B9%B6%E5%AE%89%E8%A3%85FastDFS%E7%9A%84RPM%E7%A8%8B%E5%BA%8F%E5%8C%85/</guid>
        
        <category>FastDFS rpm</category>
        
        
      </item>
    
      <item>
        <title>分布式文件系统-FastDFS</title>
        <description>&lt;h3 id=&quot;一fastdfs简介&quot;&gt;一、FastDFS简介&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FastDFS&lt;/code&gt;是由国人余庆所开发，其项目地址：https://github.com/happyfish100
&lt;code class=&quot;highlighter-rouge&quot;&gt;FastDFS&lt;/code&gt;是一个轻量级的开源分布式文件系统，主要解决了大容量的文件存储和高并发访问的问题，文件存取时实现了负载均衡。
支持存储服务器在线扩容,支持相同的文件只保存一份,节约磁盘。
&lt;code class=&quot;highlighter-rouge&quot;&gt;FastDFS&lt;/code&gt;只能通过Client API访问，不支持POSIX访问方式。
FastDFS适合中大型网站使用，用来存储资源文件(如：图片、文档、视频等)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;二fastdfs组成部分及其它名词&quot;&gt;二、FastDFS组成部分及其它名词&lt;/h3&gt;
&lt;h4 id=&quot;1tracker-server&quot;&gt;1、tracker server&lt;/h4&gt;
&lt;p&gt;跟踪服务器：用来调度来自客户端的请求。且在内存中记录所有存储组和存储服务器的信息状态。&lt;/p&gt;
&lt;h4 id=&quot;2storage-server&quot;&gt;2、storage server&lt;/h4&gt;
&lt;p&gt;存储服务器：用来存储文件(data)和文件属性(metadata)&lt;/p&gt;
&lt;h4 id=&quot;3client&quot;&gt;3、client&lt;/h4&gt;
&lt;p&gt;客户端：业务请求发起方，通过专用接口基于TCP协议与&lt;code class=&quot;highlighter-rouge&quot;&gt;tracker&lt;/code&gt;以及&lt;code class=&quot;highlighter-rouge&quot;&gt;storage server&lt;/code&gt;进行交互&lt;/p&gt;
&lt;h4 id=&quot;group&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;group&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;组，也可称为卷：同组内上的文件是完全相同的&lt;/p&gt;
&lt;h4 id=&quot;文件标识&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;文件标识&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;包括两部分：组名和文件名(包含路径)&lt;/p&gt;
&lt;h4 id=&quot;meta-data&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;meta data&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;文件相关属性：键值对(Key Value Pair)方式&lt;/p&gt;
&lt;h4 id=&quot;fid&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fid&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;文件标识符：
例如：
&lt;code class=&quot;highlighter-rouge&quot;&gt;group1/M00/00/00/CgEOxVegXB2AdYafAAAB0b8tBbQ9155303&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;group_name&lt;/code&gt;：存储组的组名；上传完成后，需要客户端自行保存
&lt;code class=&quot;highlighter-rouge&quot;&gt;M##&lt;/code&gt;：服务器配置的虚拟路径，与磁盘选项store_path#对应
两级以两位16进制数字命名的目录
&lt;code class=&quot;highlighter-rouge&quot;&gt;文件名&lt;/code&gt;：与原文件名并不相同；由storage server根据特定信息生成。文件名包含：源存储服务器的IP地址、文件创建时间戳、文件大小、随机数和文件扩展名等&lt;/p&gt;
&lt;h3 id=&quot;三fastdfs同步机制&quot;&gt;三、FastDFS同步机制&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;1、同一组内的storage server之间是对等的，文件上传、删除等操作可以在任意一台storage server上进行；
2、文件同步只在同组内的storage server之间进行，采用push方式，即源服务器同步给目标服务器；
3、源头数据才需要同步，备份数据不需要再次同步，否则就构成环路了；
上述第二条规则有个例外，就是新增加一台storage server时，由已有的一台storage server将已有的所有数据（包括源头数据和备份数据）同步给该新增服务器。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;四fastdfs与集中存储方式对比&quot;&gt;四、FastDFS与集中存储方式对比&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://obbogqhb1.bkt.clouddn.com/fastdfs2.png&quot; alt=&quot;enter image description here&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;五fastdfs和mogilefs对比&quot;&gt;五、FastDFS和mogileFS对比&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://obbogqhb1.bkt.clouddn.com/fastdfs1.png&quot; alt=&quot;enter image description here&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;六fastdfs安装配置&quot;&gt;六、FastDFS安装配置&lt;/h3&gt;
&lt;h4 id=&quot;1安装开发环境&quot;&gt;1、安装开发环境&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# yum groupinstall &quot;Development Tools&quot; &quot;Server platform Development&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;2安装libfastcommon&quot;&gt;2、安装libfastcommon&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# git clone https://github.com/happyfish100/libfastcommon.git
# cd libfastcommon/
# ./make.sh 
# ./make.sh install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;3安装fastdfs&quot;&gt;3、安装fastdfs&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# cd /root/
# git clone https://github.com/happyfish100/fastdfs.git
# cd fastdfs/
# ./make.sh 
# ./make.sh install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;tracker-配置&quot;&gt;tracker 配置&lt;/h4&gt;
&lt;p&gt;配置文件修改：根据需求修改&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# cd /etc/fdfs
# cp tracker.conf.sample tracker.conf
# vim /etc/fdfs/tracker.conf
  base_path=/data/fdfs/tracker # 存储日志及tracker的状态信息
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;启动服务（Centos6）：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# mkdir -pv /data/fdfs/tracker
# service fdfs_trackerd start
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;启动服务（Centos7）方式一：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# mkdir -pv /data/fdfs/tracker
# /etc/init.d/fdfs_trackerd start
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;启动服务（Centos7）方式二：
添加systemd的units文件&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# cat &amp;gt; /usr/lib/systemd/system/fdfs_trackerd &amp;lt;&amp;lt; EOF
# Systemd unit file for default tomcat
# 

[Unit]
Description=FastDFS tracker script
After=syslog.target network.target

[Service]
Type=notify
ExecStart=/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf


[Install]
WantedBy=multi-user.target
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;通过systemd启动&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl start fdfs_trackerd.service
# ss -tnl|grep 22122
LISTEN     0      128          *:22122                    *:*  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;storage-配置&quot;&gt;storage 配置&lt;/h4&gt;
&lt;p&gt;根据需求修改&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# cd /etc/fdfs
# cp storage.conf.sample storage.conf
# vim /etc/fdfs/storage.conf
  group_name=group1  #指定组名
  base_path=/data/fdfs/storage # 用于存储数据
  store_path_count=2 # 设置设备数量
  store_path0=/data/fdfs/storage/m0 #指定存储路径0
  store_path1=/data/fdfs/storage/m1 #指定存储路径1
  # 注意：同一组内存储路径不能冲突，例如：下一个节点的存储路径就是m2,m3....等
  tracker_server=10.1.14.197:22122 #指定tracker
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;启动服务（Centos6）：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# mkdir -pv /data/fdfs/storage/{m0,m1} # 创建数据目录
# service fdfs_storaged start
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;启动服务（Centos7）方式一：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# mkdir -pv /data/fdfs/storage/{m0,m1} # 创建数据目录
# /etc/init.d/fdfs_storaged start
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;启动服务（Centos7）方式二：
添加systemd的units文件&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# mkdir -pv /data/fdfs/storage/{m0,m1} # 创建数据目录

# cat &amp;gt; /usr/lib/systemd/system/fdfs_trackerd &amp;lt;&amp;lt; EOF
# Systemd unit file for default fastdfs storage
# 

[Unit]
Description=FastDFS storage script
After=syslog.target network.target

[Service]
Type=notify
ExecStart=/usr/bin/fdfs_storaged /etc/fdfs/storage.conf


[Install]
WantedBy=multi-user.target
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;通过systemd启动&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl start fdfs_storaged.service
# ss -tnl|grep 23000
LISTEN     0      128          *:23000                    *:*   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;client配置&quot;&gt;client配置&lt;/h4&gt;
&lt;p&gt;修改客户端配置文件&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;base_path=/data/fdfs/client
tracker_server=10.1.14.197:22122
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;七测试fastdfs&quot;&gt;七、测试FastDFS&lt;/h3&gt;
&lt;h4 id=&quot;1上传文件&quot;&gt;1、上传文件&lt;/h4&gt;
&lt;p&gt;fdfs_upload_file &lt;config_file&gt; &lt;local_filename&gt; [storage_ip:port] [store_path_index]&lt;/local_filename&gt;&lt;/config_file&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# fdfs_upload_file /etc/fdfs/client.conf /etc/issue
group1/M00/00/00/CgEOxVeMxeuABKiEAAAAF30Ccq85795930
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;2查看文件&quot;&gt;2、查看文件&lt;/h4&gt;
&lt;p&gt;fdfs_file_info &lt;config_file&gt; &lt;file_id&gt;&lt;/file_id&gt;&lt;/config_file&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# fdfs_file_info /etc/fdfs/client.conf group1/M00/00/00/CgEOxVeMxeuABKiEAAAAF30Ccq85795930

source storage id: 0
source ip address: 10.1.14.198
file create timestamp: 2016-07-18 20:04:59
file size: 23
file crc32: 2097312431 (0x7D0272AF)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;3下载文件&quot;&gt;3、下载文件&lt;/h4&gt;
&lt;p&gt;fdfs_download_file &lt;config_file&gt; &lt;file_id&gt; [local_filename] [&lt;download_offset&gt; &lt;download_bytes&gt;]&lt;/download_bytes&gt;&lt;/download_offset&gt;&lt;/file_id&gt;&lt;/config_file&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# fdfs_download_file /etc/fdfs/client.conf group1/M00/00/00/CgEOxVeMxeuABKiEAAAAF30Ccq85795930 /tmp/issue
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;4查看存储节点状态&quot;&gt;4、查看存储节点状态&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# fdfs_monitor /etc/fdfs/client.conf
[2016-08-03 11:58:20] DEBUG - base_path=/data/fdfs/client, connect_timeout=30, network_timeout=60, tracker_server_count=1, anti_steal_token=0, anti_steal_secret_key length=0, use_connection_pool=0, g_connection_pool_max_idle_time=3600s, use_storage_id=0, storage server id count: 0

server_count=1, server_index=0

tracker server is 10.1.14.197:22122

group count: 1

Group 1:
group name = mage1
disk total space = 18898 MB
disk free space = 17222 MB
trunk free space = 0 MB
storage server count = 2
active server count = 2
storage server port = 23000
storage HTTP port = 8888
store path count = 1
subdir count per path = 256
current write server index = 1
current trunk file id = 0

	Storage 1:
		id = 10.1.14.198
		ip_addr = 10.1.14.198  ACTIVE
		http domain = 
		version = 5.08
		join time = 2016-08-03 20:40:46
		up time = 2016-08-03 11:58:16
		total storage = 18898 MB
		free storage = 17222 MB
		upload priority = 10
		store_path_count = 1
		subdir_count_per_path = 256
		storage_port = 23000
		storage_http_port = 8888
		current_write_path = 0
		source storage id = 
		if_trunk_server = 0
		connection.alloc_count = 256
		connection.current_count = 0
		connection.max_count = 0
		total_upload_count = 1
		success_upload_count = 1
		total_append_count = 0
		success_append_count = 0
		total_modify_count = 0
		success_modify_count = 0
		total_truncate_count = 0
		success_truncate_count = 0
		total_set_meta_count = 0
		success_set_meta_count = 0
		total_delete_count = 0
		success_delete_count = 0
		total_download_count = 0
		success_download_count = 0
		total_get_meta_count = 0
		success_get_meta_count = 0
		total_create_link_count = 0
		success_create_link_count = 0
		total_delete_link_count = 0
		success_delete_link_count = 0
		total_upload_bytes = 23
		success_upload_bytes = 23
		total_append_bytes = 0
		success_append_bytes = 0
		total_modify_bytes = 0
		success_modify_bytes = 0
		stotal_download_bytes = 0
		success_download_bytes = 0
		total_sync_in_bytes = 0
		success_sync_in_bytes = 0
		total_sync_out_bytes = 0
		success_sync_out_bytes = 0
		total_file_open_count = 1
		success_file_open_count = 1
		total_file_read_count = 0
		success_file_read_count = 0
		total_file_write_count = 1
		success_file_write_count = 1
		last_heart_beat_time = 2016-08-03 11:58:15
		last_source_update = 2016-08-03 20:43:55
		last_sync_update = 1970-01-01 08:00:00
		last_synced_timestamp = 1970-01-01 08:00:00 
	Storage 2:
		id = 10.1.14.199
		ip_addr = 10.1.14.199  ACTIVE
		http domain = 
		version = 5.08
		join time = 2016-08-03 20:42:13
		up time = 2016-08-03 11:58:08
		total storage = 18898 MB
		free storage = 17222 MB
		upload priority = 10
		store_path_count = 1
		subdir_count_per_path = 256
		storage_port = 23000
		storage_http_port = 8888
		current_write_path = 0
		source storage id = 10.1.14.198
		if_trunk_server = 0
		connection.alloc_count = 256
		connection.current_count = 0
		connection.max_count = 0
		total_upload_count = 0
		success_upload_count = 0
		total_append_count = 0
		success_append_count = 0
		total_modify_count = 0
		success_modify_count = 0
		total_truncate_count = 0
		success_truncate_count = 0
		total_set_meta_count = 0
		success_set_meta_count = 0
		total_delete_count = 0
		success_delete_count = 0
		total_download_count = 0
		success_download_count = 0
		total_get_meta_count = 0
		success_get_meta_count = 0
		total_create_link_count = 0
		success_create_link_count = 0
		total_delete_link_count = 0
		success_delete_link_count = 0
		total_upload_bytes = 0
		success_upload_bytes = 0
		total_append_bytes = 0
		success_append_bytes = 0
		total_modify_bytes = 0
		success_modify_bytes = 0
		stotal_download_bytes = 0
		success_download_bytes = 0
		total_sync_in_bytes = 23
		success_sync_in_bytes = 23
		total_sync_out_bytes = 0
		success_sync_out_bytes = 0
		total_file_open_count = 1
		success_file_open_count = 1
		total_file_read_count = 0
		success_file_read_count = 0
		total_file_write_count = 1
		success_file_write_count = 1
		last_heart_beat_time = 2016-08-03 11:58:07
		last_source_update = 1970-01-01 08:00:00
		last_sync_update = 2016-08-03 20:43:57
		last_synced_timestamp = 2016-08-03 20:43:55 (0s delay)

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;八配置nginx为storage-server提供http访问接口&quot;&gt;八、配置nginx为storage server提供http访问接口&lt;/h3&gt;
&lt;h4 id=&quot;1下载fastdfs-nginx-module&quot;&gt;1、下载fastdfs-nginx-module&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# git clone https://github.com/happyfish100/fastdfs-nginx-module.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;2下载nginx源码并编译支持fastdfs&quot;&gt;2、下载nginx源码，并编译支持fastdfs&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 安装依赖程序
# yum install openssl-devel pcre-devel -y &amp;amp;&amp;gt;/dev/null

# wget http://nginx.org/download/nginx-1.10.1.tar.gz &amp;amp;&amp;gt;/dev/null

# tar xf /root/nginx-1.10.1.tar.gz

# cd /root/nginx-1.10.1
# useradd -r nginx &amp;amp;&amp;gt;/dev/null

# ./configure --prefix=/usr/local/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx/nginx.pid --lock-path=/var/lock/nginx.lock --user=nginx --group=nginx --with-http_ssl_module --with-http_stub_status_module --with-pcre --add-module=../fastdfs-nginx-module/src
# make
# make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;3复制配置文件&quot;&gt;3、复制配置文件&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# cp /root/fastdfs-nginx-module/src/mod_fastdfs.conf  /etc/fdfs/
# cp /root/fastdfs-5.0.8/conf/{http.conf,mime.types}  /etc/fdfs/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;注意：&lt;code class=&quot;highlighter-rouge&quot;&gt;fastdfs-5.0.8&lt;/code&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;fastdfs&lt;/code&gt;源码目录，如为更改，应叫&lt;code class=&quot;highlighter-rouge&quot;&gt;fastdfs&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;4配置fastdfs-nginx-module配置文件&quot;&gt;4、配置fastdfs-nginx-module配置文件&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# vim /etc/fdfs/mod_fastdfs.conf
base_path=/data/fdfs/storage #存储节点的目录位置
tracker_server=10.1.14.197:22122 #制定tracker-server
storage_server_port=23000
group_name=mage1  #制定组名
url_have_group_name = true  #访问路径中是否包括组名
store_path_count=1 #配置路径个数
store_path0=/data/fdfs/storage/m0  #指定要查看的路径

[group1]
group_name=mage1
storage_server_port=23000
store_path_count=1
store_path0=/data/fdfs/storage/m0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;5配置nginx&quot;&gt;5、配置nginx&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# vim /etc/nginx/nginx.conf
location ~ /mage[0-9]+/M00/ {
	root /data/fdfs/storage/m0/data/;
	ngx_fastdfs_module;
}		
# cat &amp;gt;&amp;gt; /etc/profile.d/nginx.sh &amp;lt;&amp;lt; EOF
export PATH=$PATH:/usr/local/nginx/sbin
EOF

# source /etc/profile.d/nginx.sh

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;6为存储文件路径穿件链接至m00&quot;&gt;6、为存储文件路径穿件链接至M00&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# ln -sv /data/fdfs/storage/m0/data  /data/fdfs/storage/m0/data/M00 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;7启动nginx和重启storage并上传文件测试&quot;&gt;7、启动nginx和重启storage并上传文件测试&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;启动nginx
# nginx -t
# nginx
# /etc/init.d/fdfs_storaged restart
# ss -tnl|grep -E &quot;(80|23000)&quot;
LISTEN     0      128          *:80                       *:*                  
LISTEN     0      128          *:23000                    *:*  

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;上传文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# fdfs_upload_file /etc/fdfs/client.conf /usr/share/wallpapers/CentOS7/contents/images/2560x1600.jpg
mage1/M00/00/00/CgEOx1ehc2eATt6RAA6q2wjnW8s035.jpg
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;查看测试&lt;/strong&gt;
&lt;img src=&quot;http://obbogqhb1.bkt.clouddn.com/fastdfs3.png&quot; alt=&quot;enter image description here&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;作者：Antony WX&amp;amp;QQ：1257465991
Q/A：如有问题请慷慨提出&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sat, 07 Jan 2017 00:00:00 +0800</pubDate>
        <link>https://zantony.github.io/2017/01/07/%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F-FastDFS/</link>
        <guid isPermaLink="true">https://zantony.github.io/2017/01/07/%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F-FastDFS/</guid>
        
        <category>FastDFS</category>
        
        
      </item>
    
      <item>
        <title>为什么你的Linux物理内存还有很多，却开始使用swap?</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;现在的机器上都是有多个&lt;code class=&quot;highlighter-rouge&quot;&gt;CPU&lt;/code&gt;和多个&lt;code class=&quot;highlighter-rouge&quot;&gt;内存块&lt;/code&gt;的。以前我们都是将内存块看成是一大块内存，所有&lt;code class=&quot;highlighter-rouge&quot;&gt;CPU&lt;/code&gt;到这个&lt;code class=&quot;highlighter-rouge&quot;&gt;共享内存&lt;/code&gt;的访问消息是一样的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;这就是之前普遍使用的&lt;code class=&quot;highlighter-rouge&quot;&gt;SMP&lt;/code&gt;模型。但是随着处理器的增加，共享内存可能会导致内存访问冲突越来越厉害，且如果内存访问达到瓶颈的时候，性能就不能随之增加。&lt;code class=&quot;highlighter-rouge&quot;&gt;NUMA（Non-Uniform Memory Access）&lt;/code&gt;就是这样的环境下引入的一个模型。比如一台机器是有2个处理器，有4个内存块。我们将1个处理器和两个内存块合起来，称为一个&lt;code class=&quot;highlighter-rouge&quot;&gt;NUMA node&lt;/code&gt;，这样这个机器就会有两个&lt;code class=&quot;highlighter-rouge&quot;&gt;NUMA node&lt;/code&gt;。在物理分布上，&lt;code class=&quot;highlighter-rouge&quot;&gt;NUMA node&lt;/code&gt;的处理器和内存块的物理距离更小，因此访问也更快。比如这台机器会分左右两个处理器（&lt;code class=&quot;highlighter-rouge&quot;&gt;cpu1&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;cpu2&lt;/code&gt;），在每个处理器两边放两个内存块(memory1.1, memory1.2, memory2.1,memory2.2)，这样&lt;code class=&quot;highlighter-rouge&quot;&gt;NUMA node1&lt;/code&gt;的cpu1访问&lt;code class=&quot;highlighter-rouge&quot;&gt;memory1.1&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;memory1.2&lt;/code&gt;就比访问&lt;code class=&quot;highlighter-rouge&quot;&gt;memory2.1&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;memory2.2&lt;/code&gt;更快。所以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;NUMA&lt;/code&gt;的模式如果能尽量保证本&lt;code class=&quot;highlighter-rouge&quot;&gt;node&lt;/code&gt;内的&lt;code class=&quot;highlighter-rouge&quot;&gt;CPU&lt;/code&gt;只访问本&lt;code class=&quot;highlighter-rouge&quot;&gt;node&lt;/code&gt;内的内存块，那这样的效率就是最高的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;在运行程序的时候使用&lt;code class=&quot;highlighter-rouge&quot;&gt;numactl -m&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;-physcpubind&lt;/code&gt;就能制定将这个程序运行在哪个&lt;code class=&quot;highlighter-rouge&quot;&gt;cpu&lt;/code&gt;和哪个&lt;code class=&quot;highlighter-rouge&quot;&gt;memory&lt;/code&gt;中。玩转&lt;code class=&quot;highlighter-rouge&quot;&gt;cpu-topology&lt;/code&gt;给了一个表格，当程序只使用一个&lt;code class=&quot;highlighter-rouge&quot;&gt;node&lt;/code&gt;资源和使用多个&lt;code class=&quot;highlighter-rouge&quot;&gt;node&lt;/code&gt;资源的比较表（差不多是38s与28s的差距）。所以限定程序在&lt;code class=&quot;highlighter-rouge&quot;&gt;numa node&lt;/code&gt;中运行是有实际意义的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;但是呢，话又说回来了，制定&lt;code class=&quot;highlighter-rouge&quot;&gt;numa&lt;/code&gt;就一定好吗？&lt;code class=&quot;highlighter-rouge&quot;&gt;--numa&lt;/code&gt;的陷阱。&lt;code class=&quot;highlighter-rouge&quot;&gt;SWAP&lt;/code&gt;的罪与罚文章就说到了一个&lt;code class=&quot;highlighter-rouge&quot;&gt;numa&lt;/code&gt;的陷阱的问题。现象是当你的服务器还有内存的时候，发现它已经在开始使用&lt;code class=&quot;highlighter-rouge&quot;&gt;swap&lt;/code&gt;了，甚至已经导致机器出现停滞的现象。这个就有可能是由于&lt;code class=&quot;highlighter-rouge&quot;&gt;numa&lt;/code&gt;的限制，如果一个进程限制它只能使用自己的&lt;code class=&quot;highlighter-rouge&quot;&gt;numa&lt;/code&gt;节点的内存，那么当自身&lt;code class=&quot;highlighter-rouge&quot;&gt;numa node&lt;/code&gt;内存使用光之后，就不会去使用其他&lt;code class=&quot;highlighter-rouge&quot;&gt;numa node&lt;/code&gt;的内存了，会开始使用&lt;code class=&quot;highlighter-rouge&quot;&gt;swap&lt;/code&gt;，甚至更糟的情况，机器没有设置&lt;code class=&quot;highlighter-rouge&quot;&gt;swap&lt;/code&gt;的时候，可能会直接死机！所以你可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;numactl --interleave=all&lt;/code&gt;来取消&lt;code class=&quot;highlighter-rouge&quot;&gt;numa node&lt;/code&gt;的限制。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;综上所述得出的结论就是，根据具体业务决定&lt;code class=&quot;highlighter-rouge&quot;&gt;NUMA&lt;/code&gt;的使用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;如果你的程序是会占用大规模内存的，你大多应该选择关闭&lt;code class=&quot;highlighter-rouge&quot;&gt;numa node&lt;/code&gt;的限制。因为这个时候你的程序很有几率会碰到&lt;code class=&quot;highlighter-rouge&quot;&gt;numa&lt;/code&gt;陷阱。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;另外，如果你的程序并不占用大内存，而是要求更快的程序运行时间。你大多应该选择限制只访问本&lt;code class=&quot;highlighter-rouge&quot;&gt;numa node&lt;/code&gt;的方法来进行处理。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;转载：http://lib.csdn.net/article/linux/28546&lt;/p&gt;
</description>
        <pubDate>Sat, 07 Jan 2017 00:00:00 +0800</pubDate>
        <link>https://zantony.github.io/2017/01/07/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E7%9A%84Linux%E7%89%A9%E7%90%86%E5%86%85%E5%AD%98%E8%BF%98%E6%9C%89%E5%BE%88%E5%A4%9A-%E5%8D%B4%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8swap/</link>
        <guid isPermaLink="true">https://zantony.github.io/2017/01/07/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E7%9A%84Linux%E7%89%A9%E7%90%86%E5%86%85%E5%AD%98%E8%BF%98%E6%9C%89%E5%BE%88%E5%A4%9A-%E5%8D%B4%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8swap/</guid>
        
        <category>system</category>
        
        <category>swap</category>
        
        
      </item>
    
      <item>
        <title>python-快速改造：基础知识</title>
        <description>&lt;h2 id=&quot;一python安装之pyenv&quot;&gt;一、python安装之pyenv&lt;/h2&gt;
&lt;h3 id=&quot;windows下安装python&quot;&gt;windows下安装Python&lt;/h3&gt;
&lt;p&gt;（1）打开web浏览器，访问Python官方站点http://www.python.org&lt;/p&gt;

&lt;p&gt;（2）点击Download，或者在首页点击下载&lt;/p&gt;

&lt;p&gt;（3）下载所需版本，目前最新版本为3.5.2&lt;/p&gt;

&lt;p&gt;（4）下载完成后双击并执行安装&lt;/p&gt;
&lt;h3 id=&quot;centos下安装python和pyenv&quot;&gt;CentOS下安装Python和pyenv&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;pyenv：pyenv是一款python版本管理器，由于不同程序员可能使用不同的python进行开发，但还需在同一台机器又互不影响。pyenv主要的作用就是可以设置不同的目录使用不同的版本，且可以很简单的安装python。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;1安装依赖包&quot;&gt;1、安装依赖包&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yum groupinstall &quot;Development Tools&quot; &quot;Server Plataform Development&quot; -y
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;2安装pyenv&quot;&gt;2、安装pyenv&lt;/h4&gt;
&lt;p&gt;（1）通过git克隆pyenv程序&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone https://github.com/yyuu/pyenv.git ~/.pyenv
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;（2）设置pyenv的环境变量&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ echo &#39;export PYENV_ROOT=&quot;$HOME/.pyenv&quot;&#39; &amp;gt;&amp;gt; ~/.bash_profile
$ echo &#39;export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;（3）添加&lt;code class=&quot;highlighter-rouge&quot;&gt;pyenv init&lt;/code&gt;到环境变量中&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ echo &#39;eval &quot;$(pyenv init -)&quot;&#39; &amp;gt;&amp;gt; ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;（4）重读你的shell&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ exec $SHELL
$ source ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;3pyenv的使用及安装python&quot;&gt;3、pyenv的使用及安装python&lt;/h4&gt;
&lt;p&gt;列出所有可用的版本&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv install -l
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;安装指定版本&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pyenv install 3.5.2
Downloading Python-3.5.2.tar.xz...
-&amp;gt; https://www.python.org/ftp/python/3.5.2/Python-3.5.2.tar.xz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;切换本地python版本&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pyenv local 2.7.12
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;切换全局python版本&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv global 3.5.2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;4卸载pyenv&quot;&gt;4、卸载pyenv&lt;/h4&gt;
&lt;p&gt;CentOS 卸载&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rm -rf `pyenv root`
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Mac OS X&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew uninstall pyenv
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id=&quot;二交互式解释器&quot;&gt;二、交互式解释器&lt;/h2&gt;
&lt;p&gt;当启动python的时候，会出现如下提示：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python
Python 3.5.2 (default, Aug 17 2016, 18:31:29) 
[GCC 4.4.7 20120313 (Red Hat 4.4.7-17)] on linux
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;可以再次和python进行交互式的输入，比如&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; print(&#39;Hello World&#39;)
当按下回车后，会得到下面的输出
Hello World
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;当然很多计算机语言，习惯以分号结尾，但是python不同，一行就是一行，不管内容多少。
上面所描述的就是交互式解释器，可以通过键入一些字符来获取输出从而实现自己的目的。&lt;/p&gt;
&lt;h2 id=&quot;三算法是什么&quot;&gt;三、算法是什么&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;在开始变成前，首先先解释一下什么是计算机程序设计。简单来说，就是告诉计算机去做什么。计算机可以做很多事情，但是不会自己去做，程序员就像给小孩喂饭一样告诉它具体的细节，并且使用计算机能够理解的语言—-算法。“算法”不过是“步骤”或者“食谱”的另外一种文绉绉的说法—对于如何做某一件事的一份详细描述。比如：
凉皮做法：
（1）将凉皮切成细条
（2）将凉皮放入容器中
（3）放入麻将、醋、蒜汁、辣椒等调料
（4）搅拌大约1分钟左右
其实上面的步骤就是算法，他告诉醋程序如何去做，做多久，以及做什么，还有对什么做。&lt;/p&gt;
  &lt;h2 id=&quot;四数字和表达式&quot;&gt;四、数字和表达式&lt;/h2&gt;
  &lt;h3 id=&quot;数字运算&quot;&gt;数字运算&lt;/h3&gt;
  &lt;p&gt;交互式python解释器可以当做非常强大的计算器使用&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt; 3666665444566 + 1123134546
3667788579112
&amp;gt;&amp;gt; 588822456 * 33334678
19628206969929168
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
  &lt;p&gt;当然还有一些特殊的,下面的两个例子分别在不同的版本下
```
Python 2.7.5 (default, Jun 24 2015, 00:41:19) 
[GCC 4.8.3 20140911 (Red Hat 4.8.3-9)] on linux2
Type “help”, “copyright”, “credits” or “license” for more information.&lt;/p&gt;
  &lt;blockquote&gt;
    &lt;blockquote&gt;
      &lt;p&gt;1/2
0&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;Python 3.5.2 (default, Aug 17 2016, 18:31:29) 
[GCC 4.4.7 20120313 (Red Hat 4.4.7-17)] on linux
Type “help”, “copyright”, “credits” or “license” for more information.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;blockquote&gt;
      &lt;p&gt;1/2
0.5&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#### 整除
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;20 / 3
6.666666666666667
20 // 3
6&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#### 取余
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;122 % 3
2
2.75 % 0.5
0.25&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#### 幂
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;(-3) ** 2
9
(-3) ** 3
-27
3 ** 3
27&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;### 长整数
长整数的显示方式在python3.0之后有所不同，3.0之前后面会有一个L
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;Python 2.7.5 (default, Jun 24 2015, 00:41:19) 
[GCC 4.8.3 20140911 (Red Hat 4.8.3-9)] on linux2
Type “help”, “copyright”, “credits” or “license” for more information.
30000000000000000000000000000
30000000000000000000000000000L&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;Python 3.5.2 (default, Aug 17 2016, 18:31:29) 
[GCC 4.4.7 20120313 (Red Hat 4.4.7-17)] on linux
Type “help”, “copyright”, “credits” or “license” for more information.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;blockquote&gt;

      &lt;p&gt;243000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
243000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## 五、变量
变量(variable)是另外一个需要熟知的概念。变量基本上就是代表(或者引用)某值得名字
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;x = 3
x
3
x * 2
6&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;注意：变量名可以包括字母、数字和下划线。变量不能以数字开头。
## 六、获取用户输入
在编写程序的时候，我们可能并不知道某些变量的值。可能通过用户的输入，但是解释器是知道他的值的，所以我们可能会需要去获取用户的输入，获取用户的输入使用input()函数(在3.0以后raw_input函数被input函数替代)
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;input(‘Please input your name? ‘)
Please input your name? Antony
‘Antony’&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;我们也可以将获取的值存入到一个变量
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;name = input(‘Please input your name? ‘)
Please input your name? superman
name
‘superman’&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;计算
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;x = input(‘Please input a number x: ‘)
Please input a number x: 34
y = input(‘Please input a number y: ‘)
Please input a number y: 56
x
‘34’
y
‘56’
int(x) * int(y)
1904&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## 七、函数
函数类似小程序，可以用来实现特定的功能。python有很多函数，print()就是一个函数。定义函数会在后续介绍，目前先介绍如何使用python的内置函数。
### pow()
pow表示幂，既做计算乘方
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;2 ** 3
8
pow(2,3)
8
pow(3,2)
9&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;### abs()
abs表示绝对值
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;abs(-10)
10&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;### round()
round函数会把浮点数四舍五入
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;1 / 2
0.5
round(1 / 2)
0
round(5 / 2)
2&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;### floor()
floor为向下取整，比如某个人的年龄是32.9岁，既32岁零九个月，这个时候不能说他已经三三岁，这个时候使用floor函数
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;import math
math.floor(32.9)
32&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;floor函数在python3.0之后取值不再为小数，直接取得证书，下面为3.0之前的输出
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;import math
math.floor(32.9)
32.0&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;### int()
int表示取整数
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;int(256.125)
256&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;### input()
input表示获取用户输入，在上面有过介绍，话不多说，上例子
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;input(‘Do you want me? ‘)
Do you want me? No!!!
‘No!!!’&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;### exit()
用来退出python的交互式解释器
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;$ python
Python 3.5.2 (default, Aug 17 2016, 18:31:29) 
[GCC 4.4.7 20120313 (Red Hat 4.4.7-17)] on linux
Type “help”, “copyright”, “credits” or “license” for more information.
exit()
$&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## 八、模块
模块是为了扩展python的功能，需要使用特殊的命令import来导入模块。前面内容提到的floor函数就在名为math模块中。
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;import math
math.floor(333.20)
333&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;有的时候可能只需要使用某个模块中的一个函数，而且不希望每次都写上模块的名字，可以使用另外一种形式。
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;p&gt;from math import sqrt
sqrt(9)
3.0
```&lt;/p&gt;
      &lt;h2 id=&quot;九保存于执行脚本&quot;&gt;九、保存于执行脚本&lt;/h2&gt;
      &lt;p&gt;为了将命令永久存储，以便以后使用，可以写到文件中。
文件的开头需要注明，因为在unix中有个标准的实现方法：在脚本首行前加上&lt;code class=&quot;highlighter-rouge&quot;&gt;#！&lt;/code&gt;。再其后面添加用于解释脚本的程序的绝对路径。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;例如：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat first.py 
#!/usr/bin/env python3.5
name = input(&#39;Please input your name: &#39;)
print(&#39;Hello, &#39; + name)

$ chmod +x first.py 
$ ./first.py 
Please input your name: Antony
Hello, Antony
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id=&quot;小结&quot;&gt;小结&lt;/h2&gt;
&lt;p&gt;算法：算法是对如何完成一项任务的详尽描述。实际上，在编写程序的时候，就要使用计算机能够理解的语言（如Python）来描述算法。这类对机器友好的描述叫做程序，程序主要包含表达式和语句。&lt;/p&gt;
</description>
        <pubDate>Sat, 07 Jan 2017 00:00:00 +0800</pubDate>
        <link>https://zantony.github.io/2017/01/07/python-%E5%BF%AB%E9%80%9F%E6%94%B9%E9%80%A0-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
        <guid isPermaLink="true">https://zantony.github.io/2017/01/07/python-%E5%BF%AB%E9%80%9F%E6%94%B9%E9%80%A0-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
        
        <category>python</category>
        
        <category>python基础</category>
        
        
      </item>
    
      <item>
        <title>Git基础</title>
        <description>&lt;h3 id=&quot;一git-install&quot;&gt;一、git install&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
Ubuntu

sudo apt-get install git

Centos

yum install git  

Mac

brew install git

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;二git-initialization-configure&quot;&gt;二、git initialization configure&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
git config --global user.name &quot;Your Name&quot;

git config --global user.email &quot;email@example.com&quot;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h6 id=&quot;注意git-config命令的--global参数用了这个参数表示你这台机器上所有的git仓库都会使用这个配置当然也可以对某个仓库指定不同的用户名和email地址&quot;&gt;注意&lt;code class=&quot;highlighter-rouge&quot;&gt;git config&lt;/code&gt;命令的&lt;code class=&quot;highlighter-rouge&quot;&gt;--global&lt;/code&gt;参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址&lt;/h6&gt;

&lt;h3 id=&quot;三git-create-repository&quot;&gt;三、git create repository&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;git版本库，也叫仓库，英文为&lt;code class=&quot;highlighter-rouge&quot;&gt;repository&lt;/code&gt;，可以理解为一个目录，目录里的文件都可以被git管理起来，每个文件的修改、删除Git都能跟踪，以便任何时候都能够追踪历史，或者将来在某个时刻可以还原。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;1创建一个目录&quot;&gt;1、创建一个目录&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ mkdir gitrepo

$ cd gitrepo

$ pwd

/Users/antony/gitrepo

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;注意：目录不要包含中文&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;2通过-git-init-命令把这个目录变成git可以管理的仓库&quot;&gt;2、通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;git init&lt;/code&gt; 命令把这个目录变成Git可以管理的仓库&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ git init

Initialized empty Git repository in /Users/antony/gitrepo/.git/

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;瞬间Git就把仓库建好了，而且告诉你是一个空的仓库（empty Git repository），细心的读者可以发现当前目录下多了一个&lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt;的目录，这个目录是Git来跟踪管理版本库的，没事千万不要手动修改这个目录里面的文件，不然改乱了，就把Git仓库给破坏了。&lt;/p&gt;

&lt;h3 id=&quot;四提交一个文件到仓库&quot;&gt;四、提交一个文件到仓库&lt;/h3&gt;

&lt;h5 id=&quot;1创建一个文件&quot;&gt;1、创建一个文件&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ vim readme.txt

This is a test file

Git is a opensource app

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;此文件一定要放在刚才创建的仓库下，即&lt;code class=&quot;highlighter-rouge&quot;&gt;gitrepo&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;2用命令git-add将文件添加到仓库&quot;&gt;2、用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt;将文件添加到仓库&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ git add readme.txt

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;3用命令git-commit告诉git把文件提交到git仓库&quot;&gt;3、用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;告诉Git，把文件提交到git仓库&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ git commit -m &quot;up a readme file&quot;

[master (root-commit) ba4d5a3] up a readme file

 1 file changed, 2 insertions(+)

 create mode 100644 readme.txt

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt; 添加描述，一般用来告诉此次提交的说明&lt;/p&gt;

&lt;p&gt;为什么添加文件需要&lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;commit&lt;/code&gt;两步呢？ 因为&lt;code class=&quot;highlighter-rouge&quot;&gt;commit&lt;/code&gt;一次可以提交多个文件，所以你可以多次&lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt;不同文件,比如&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ git add file1

$ git add file2 file3

$ git commit -m &quot;file2 file3&quot;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;五git-statusdiff状态对比&quot;&gt;五、Git Status、diff（状态、对比）&lt;/h3&gt;

&lt;h5 id=&quot;1status&quot;&gt;1、Status&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;修改文件&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ vim readme.txt #在最后一行新添加一行

New line

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;查看状态&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ git status

On branch master

Changes not staged for commit:

  (use &quot;git add &amp;lt;file&amp;gt;...&quot; to update what will be committed)

  (use &quot;git checkout -- &amp;lt;file&amp;gt;...&quot; to discard changes in working directory)



	modified:   readme.txt



no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; 时刻查看文件的状态，通过返回信息告诉我们文件被修改了&lt;/p&gt;

&lt;h5 id=&quot;2diff查看具体修改内容&quot;&gt;2、diff（查看具体修改内容）&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ git diff readme.txt

diff --git a/readme.txt b/readme.txt

index 194380c..e8e4b8b 100644

--- a/readme.txt

+++ b/readme.txt

@@ -1,2 +1,3 @@

 This is a test file

 Git is a opensource app

+New line

(END)

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;3查看add及commit后的状态&quot;&gt;3、查看add及commit后的状态&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add后的状态&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ git add readme.txt

$ git status

On branch master

Changes to be committed:

  (use &quot;git reset HEAD &amp;lt;file&amp;gt;...&quot; to unstage)



	modified:   readme.txt

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit后的状态&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ git commit -m &quot;add new line&quot;

[master a782d05] add new line

 1 file changed, 1 insertion(+)

$ git status


On branch master

nothing to commit, working tree clean

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;六版本回退&quot;&gt;六、版本回退&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;先修改一次文件&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ vim readme.txt

New line 2

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;提交文件&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ git add readme.txt

$ git commit -m &quot;New line 2&quot;

[master def33d7] New line 2

 1 file changed, 1 insertion(+)

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;1版本提交历史记录git-log&quot;&gt;1、版本提交历史记录&lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt;&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ git log

commit def33d73a1ded1b673f2b994bddedce9f8409a33

Author: ZAntony &amp;lt;zantony.top@gmail.com&amp;gt;

Date:   Sun Dec 11 22:36:53 2016 +0800



    New line 2



commit a782d05f438ca21a2d2336e97256bf9d7e35c058

Author: ZAntony &amp;lt;zantony.top@gmail.com&amp;gt;

Date:   Sun Dec 11 22:19:43 2016 +0800



    add new line



commit ba4d5a316c0e915e768d0a793999ff9f5f41447b

Author: ZAntony &amp;lt;zantony.top@gmail.com&amp;gt;

Date:   Sun Dec 11 22:00:13 2016 +0800



    up a readme file

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;git 最近显示的是&lt;code class=&quot;highlighter-rouge&quot;&gt;New line 2&lt;/code&gt;,上一次是&lt;code class=&quot;highlighter-rouge&quot;&gt;add new line&lt;/code&gt;,第一次是&lt;code class=&quot;highlighter-rouge&quot;&gt;up a readme file&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;--pretty=oneline&lt;/code&gt;参数控制输出内容的数量&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ git log --pretty=oneline

def33d73a1ded1b673f2b994bddedce9f8409a33 New line 2

a782d05f438ca21a2d2336e97256bf9d7e35c058 add new line

ba4d5a316c0e915e768d0a793999ff9f5f41447b up a readme file

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;前面的一串数字是16进制的commit id&lt;/strong&gt;&lt;/p&gt;

&lt;h5 id=&quot;2git-reset-版本回退&quot;&gt;2、git reset 版本回退&lt;/h5&gt;

&lt;p&gt;首先，Git必须知道当前版本是哪个版本，在Git中，用HEAD表示当前版本，也就是最新的提交def33d……..9a33（注意我的提交ID和你的肯定不一样），上一个版本就是&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD^&lt;/code&gt;，上上一个版本就是&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD^^&lt;/code&gt;，当然往上100个版本写100个^比较容易数不过来，所以写成&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD~100&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ git reset --hard HEAD^

HEAD is now at a782d05 add new line

This is a test file

Git is a opensource app

New line

# 此时版本已经回退

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;3当返回到上一个版本后突然想返回到为返回前的版本即new-line-2&quot;&gt;3、当返回到上一个版本后，突然想返回到为返回前的版本，即&lt;code class=&quot;highlighter-rouge&quot;&gt;New line 2&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;查看日志，发现并未找到回退前的版本的commit id&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ git log


commit a782d05f438ca21a2d2336e97256bf9d7e35c058

Author: ZAntony &amp;lt;zantony.top@gmail.com&amp;gt;

Date:   Sun Dec 11 22:19:43 2016 +0800



    add new line



commit ba4d5a316c0e915e768d0a793999ff9f5f41447b

Author: ZAntony &amp;lt;zantony.top@gmail.com&amp;gt;

Date:   Sun Dec 11 22:00:13 2016 +0800



    up a readme file

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h6 id=&quot;当通过git-reset---hard-head恢复到add-new-line时在想恢复到之前的new-line-2就必须找到他的commit-id可以通过查看之前的命令历史来查找也可以通过git-reflog来查看commit-id&quot;&gt;当通过&lt;code class=&quot;highlighter-rouge&quot;&gt;git reset --hard HEAD^&lt;/code&gt;恢复到&lt;code class=&quot;highlighter-rouge&quot;&gt;add new line&lt;/code&gt;时，在想恢复到之前的&lt;code class=&quot;highlighter-rouge&quot;&gt;New line 2&lt;/code&gt;,就必须找到他的&lt;code class=&quot;highlighter-rouge&quot;&gt;commit id&lt;/code&gt;，可以通过查看之前的命令历史来查找，也可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;git reflog&lt;/code&gt;来查看commit id&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;git reflog&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ git reflog # 通过命令来查看commit id，id是不完整的，但是可以使用，只要保证id唯一性。

a782d05 HEAD@{0}: reset: moving to HEAD^

def33d7 HEAD@{1}: commit: New line 2

a782d05 HEAD@{2}: commit: add new line

ba4d5a3 HEAD@{3}: commit (initial): up a readme file

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;恢复版本&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ git reset --hard def33d7

HEAD is now at def33d7 New line 2

$ cat readme.txt

This is a test file

Git is a opensource app

New line

New line 2

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Sat, 07 Jan 2017 00:00:00 +0800</pubDate>
        <link>https://zantony.github.io/2017/01/07/git/</link>
        <guid isPermaLink="true">https://zantony.github.io/2017/01/07/git/</guid>
        
        <category>git</category>
        
        
      </item>
    
  </channel>
</rss>
